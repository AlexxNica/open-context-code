<?php


$requestURI = $this->requestURI;
$requestParams = $this->requestParams;
$request_array = explode('?', $requestURI, 2);
$host = OpenContext_OCConfig::get_host_config();
define ('HOST', $host);

/*
 $this->view->OCData = $OCData;
 $this->view->GenPolys = $genPolys;
*/
$OCData = $this->OCData;
$genPoints = $this->GenPoints;



$kmlFullDoc = new DOMDocument("1.0", "utf-8");
$root = $kmlFullDoc->createElementNS("http://www.opengis.net/kml/2.2", "kml");
$gxNS = $kmlFullDoc->createAttribute("xmlns:gx");
$gxNSText = $kmlFullDoc->createTextNode("http://www.google.com/kml/ext/2.2");
$gxNS->appendChild($gxNSText);
$root->appendChild($gxNS);
$atomNS = $kmlFullDoc->createAttribute("xmlns:atom");
$atomNSText = $kmlFullDoc->createTextNode(OpenContext_OCConfig::get_namespace("atom"));
$atomNS->appendChild($atomNSText);
$root->appendChild($atomNS);
$openSearchNS = $kmlFullDoc->createAttribute("xmlns:opensearch");
$openSearchNSText = $kmlFullDoc->createTextNode("http://a9.com/-/spec/opensearch/1.1/");
$openSearchNS->appendChild($openSearchNSText);
$root->appendChild($openSearchNS);
$kmlFullDoc->appendChild($root);

$totalResults = $kmlFullDoc->createElement('opensearch:totalResults');
$totalResultsText = $kmlFullDoc->createTextNode($OCData["numFound"]);
$totalResults->appendChild($totalResultsText);
$root->appendChild($totalResults);

$firstPage = OpenContext_GoogleEarth::make_result_paging($OCData["paging"]["first"], $requestParams);
$prevPage = OpenContext_GoogleEarth::make_result_paging($OCData["paging"]["prev"], $requestParams);
$nextPage = OpenContext_GoogleEarth::make_result_paging($OCData["paging"]["next"], $requestParams);
$lastPage = OpenContext_GoogleEarth::make_result_paging($OCData["paging"]["last"], $requestParams);

if($firstPage){
   $feedFirstLink = $kmlFullDoc->createElement("atom:link");
   $feedFirstLink->setAttribute("rel", "first");
   $feedFirstLink->setAttribute("href", $firstPage);
   $root->appendChild($feedFirstLink);
}
if($prevPage){
   $feedPrevLink = $kmlFullDoc->createElement("atom:link");
   $feedPrevLink->setAttribute("rel", "previous");
   $feedPrevLink->setAttribute("href", $prevPage);
   $root->appendChild($feedPrevLink);
}
if($nextPage){
   $feedNextLink = $kmlFullDoc->createElement("atom:link");
   $feedNextLink->setAttribute("rel", "next");
   $feedNextLink->setAttribute("href", $nextPage);
   $root->appendChild($feedNextLink);
}
if($lastPage){
   $feedLastLink = $kmlFullDoc->createElement("atom:link");
   $feedLastLink->setAttribute("rel", "last");
   $feedLastLink->setAttribute("href", $lastPage);
   $root->appendChild($feedLastLink);
}

$kmlDocument = $kmlFullDoc->createElement("Document");
$root->appendChild($kmlDocument);


if($OCData != false){


   $filter_output = "<p>Selection Criteria:</p>".chr(13);
   $filter_output .= "<table style='border: 1px solid #C7C7C7; border-collapse:collapse;'>".chr(13);
   $i=0;
   
   $contextFilter = "";
   foreach($OCData["summary"] as $actFilter){
      
      $cleanValue = str_replace("||", " OR ", $actFilter["value"]);
      if(substr_count($actFilter["filter"], "Contained in")>0){
	 $contextFilter = "View of Search Results in: ".$cleanValue;
      }
      
      if ( $i&1 ){
	 $color = "";
      }
      else{
	 $color = "background-color: #F7F7F7";
      }
      
      $filter_output .= "<tr style='$color'>".chr(13);
      $filter_output .= "<td style='padding:4px; border: 1px solid grey;'><em>".$actFilter["filter"].":</em></td>".chr(13);
      $filter_output .= "<td style='padding:4px; border: 1px solid grey;'>".$cleanValue."</td>".chr(13);
      $filter_output .= "</tr>".chr(13);
      
   $i++;
   }
   $filter_output .= "</table>";

   //look at data
   $lookPos = $this->lookPos;
   $lookAt = $kmlFullDoc->createElement("LookAt");
   
   
   $lookAtLon = $kmlFullDoc->createElement("longitude");
   $lookAtLonText = $kmlFullDoc->createTextNode($lookPos["lon"]);
   $lookAtLon->appendChild($lookAtLonText);
   $lookAt->appendChild($lookAtLon);
   
   $lookAtLat = $kmlFullDoc->createElement("latitude");
   $lookAtLatText = $kmlFullDoc->createTextNode($lookPos["lat"]);
   $lookAtLat->appendChild($lookAtLatText);
   $lookAt->appendChild($lookAtLat);
   
   $lookAtAlt = $kmlFullDoc->createElement("altitude");
   $lookAtAltText = $kmlFullDoc->createTextNode($lookPos["maxAlt"]*.25);
   $lookAtAlt->appendChild($lookAtAltText);
   $lookAt->appendChild($lookAtAlt);
   
   $lookAtAltMode = $kmlFullDoc->createElement("altitudeMode");
   $lookAtAltModeText = $kmlFullDoc->createTextNode("clampToGround");
   $lookAtAltMode->appendChild($lookAtAltModeText);
   $lookAt->appendChild($lookAtAltMode);
   
   $lookAtRange = $kmlFullDoc->createElement("range");
   $lookAtRangeText = $kmlFullDoc->createTextNode($lookPos["range"]*3);
   $lookAtRange->appendChild($lookAtRangeText);
   $lookAt->appendChild($lookAtRange);
   
   $lookAtTilt = $kmlFullDoc->createElement("tilt");
   $lookAtTiltText = $kmlFullDoc->createTextNode("45");
   $lookAtTilt->appendChild($lookAtTiltText);
   $lookAt->appendChild($lookAtTilt);
   
   $lookAtHead = $kmlFullDoc->createElement("heading");
   $lookAtHeadText = $kmlFullDoc->createTextNode("300");
   $lookAtHead->appendChild($lookAtHeadText);
   $lookAt->appendChild($lookAtHead);
   
   $timespan = $kmlFullDoc->createElement("gx:TimeSpan");
   $time_begin = $kmlFullDoc->createElement("gx:begin");
   $time_begin_val = $kmlFullDoc->createTextNode($lookPos["minTime"]);
   $time_begin->appendChild($time_begin_val);
   $timespan->appendChild($time_begin);
   $time_end = $kmlFullDoc->createElement("gx:end");
   $time_end_val = $kmlFullDoc->createTextNode($lookPos["maxTime"]);
   $time_end->appendChild($time_end_val);
   $timespan->appendChild($time_end);
   $lookAt->appendChild($timespan);
   
   $kmlDocument->appendChild($lookAt);
   
   $networkLink = $kmlFullDoc->createElement("NetworkLink");
   $netName = $kmlFullDoc->createElement("name");
   $netNameText = $kmlFullDoc->createTextNode("OpenContext Item ".$contextFilter);
   $netName->appendChild($netNameText);
   $networkLink->appendChild($netName);
   $netLinkDes = $kmlFullDoc->createElement("description");
   
   $desText = "<table>".chr(13);
   $desText .= "<tr>".chr(13);
    $desText .= "<td><a href='http://opencontext.org/about/' title='About Open Context'><img src='http://opencontext.org/images/general/OC_logo_tiny.png'/></a></td>".chr(13);
   $desText .= "<td>Search results of <strong>".$OCData["numFound"]."</strong> items</td>".chr(13);
   $desText .= "</tr>".chr(13);
   $desText .= "</table><br/>".chr(13);
   $desText .= $filter_output;
   
   $netLinkDesText = $kmlFullDoc->createCDATASection($desText);
   $netLinkDes->appendChild($netLinkDesText);
   $networkLink->appendChild($netLinkDes);
   $netLinkLink = $kmlFullDoc->createElement("Link");
   $netLinkLinkHref = $kmlFullDoc->createElement("href");
   $netLinkLinkHrefText = $kmlFullDoc->createTextNode($host.$requestURI);
   $netLinkLinkHref->appendChild($netLinkLinkHrefText);
   $netLinkLink->appendChild($netLinkLinkHref);
   $networkLink->appendChild($netLinkLink);
   //$kmlDocument->appendChild($networkLink);
   
   $kmlDocument->appendChild($netName);
   $kmlDocument->appendChild($netLinkDes);
   
   if(array_key_exists("default_context_path", $requestParams)){
      $default_context_path = $requestParams["default_context_path"];
      $contextDepth = substr_count($default_context_path, "/");
   }
   else{
      $contextDepth = 0;
   }
   
   $i=1;
   $requestHash = md5($requestURI);
   foreach($OCData["results"] as $actItem){
      
      $actKey = $actItem["uri"]; 
      
      //create a new KML placemark
      $placemark = $kmlFullDoc->createElement("Placemark");
      $placemarkID = $kmlFullDoc->createAttribute("id");
      $placemarkIDText = $kmlFullDoc->createTextNode($requestHash."_".$i);
      $placemarkID->appendChild($placemarkIDText);
      $placemark->appendChild($placemarkID);
      
      //add a name for the placemark
      $placeName = $kmlFullDoc->createElement("name");
      $placeNameText = $kmlFullDoc->createTextNode($actItem["category"].": ".$actItem["label"]);
      $placeName->appendChild($placeNameText);
      $placemark->appendChild($placeName);
      
      
      //make a URI that would work as a 'Feature Anchor' in GoogleEarth
      $actURI = OpenContext_GoogleEarth::makeFeatureAnchor($actItem["uri"]);
      $actURI = $actItem["uri"];
      //add a description to the placemark
      
      $des_number = "Item from the <em>".$actItem["project"]."</em> project<br/>";
      
      if(($actItem["geoTime"]["timeBegin"] ==0)&&($actItem["geoTime"]["timeEnd"] == 0)){
	 $human_read = "(not available)";
	 $doTime = false;
      }
      else{
	 $human_read = OpenContext_DateRange::bce_ce_note($actItem["geoTime"]["timeBegin"])." to ".OpenContext_DateRange::bce_ce_note($actItem["geoTime"]["timeEnd"]);
	 $doTime = true;
      }
      
      $desText = "<table>".chr(13);
      $desText .= "<tr>".chr(13);
      $desText .= "<td><img src='".$actItem["thumbIcon"]."'/></td>".chr(13);
      $desText .= "<td>".$des_number." Dating Range: ".$human_read."</td>".chr(13);
      $desText .= "</tr>".chr(13);
      
      if(!$genPoints[$actKey]["truePoint"]){
	 $desText .= "<tr>".chr(13);
	 $desText .= "<td style='text-align:right;'>&nbsp;</td>".chr(13);
	 $desText .= "<td><strong>Note:</strong> The precise location of this item is approximated.</td>".chr(13);
	 $desText .= "</tr>".chr(13);
      }
      
      
      $desText .= "</table><br/>".chr(13);
      //$desText .= $filter_output;
      $desText .= "<br/><a href='".$actURI."' >View Item Details</a><br/>";
      
      $placeDes = $kmlFullDoc->createElement("description");
      //$placeDesText = $kmlFullDoc->createTextNode($des_text);
      $placeDesText = $kmlFullDoc->createCDATASection($desText);
      $placeDes->appendChild($placeDesText);
      $placemark->appendChild($placeDes);
      
      //add color information to the placemark
      $place_style = $kmlFullDoc->createElement("Style");
      $polystyle = $kmlFullDoc->createElement("PolyStyle");
      $p_color = $kmlFullDoc->createElement("color");
      $p_color_text = $kmlFullDoc->createTextNode("7fff0000");
      $p_color->appendChild($p_color_text);
      $polystyle->appendChild($p_color);
      $place_style->appendChild($polystyle);
      
      //add label style information
      $labelstyle = $kmlFullDoc->createElement("LabelStyle");
      $l_color = $kmlFullDoc->createElement("color");
      $l_color_text = $kmlFullDoc->createTextNode("7fff0000");
      $l_color->appendChild($l_color_text);
      $labelstyle->appendChild($l_color);
      $l_mode = $kmlFullDoc->createElement("colorMode");
      $l_mode_text = $kmlFullDoc->createTextNode("normal");
      //$l_mode->appendChild($l_mode_text);
      $labelstyle->appendChild($l_mode);
      $l_scale = $kmlFullDoc->createElement("scale");
      $l_scale_text = $kmlFullDoc->createTextNode(".75");
      $l_scale->appendChild($l_scale_text);
      $labelstyle->appendChild($l_scale);
      $place_style->appendChild($labelstyle);
      //$polystyle->appendChild($labelstyle);
   
      
      //add icon so polygon can be clicked
      $iconstyle = $kmlFullDoc->createElement("IconStyle");
      $icon_pict = $kmlFullDoc->createElement("Icon");
      $icon_plink = $kmlFullDoc->createElement("href");
      $icon_plink_text = $kmlFullDoc->createTextNode("http://maps.google.com/mapfiles/kml/paddle/purple-circle.png");
      $icon_plink->appendChild($icon_plink_text);
      $icon_pict->appendChild($icon_plink);
      $iconstyle->appendChild($icon_pict);
      $icon_scale = $kmlFullDoc->createElement("scale");
      $icon_scale_text = $kmlFullDoc->createTextNode(".6");
      $icon_scale->appendChild($icon_scale_text);
      $iconstyle->appendChild($icon_scale);
      $place_style->appendChild($iconstyle);
      
      $placemark->appendChild($place_style);
      
      
      $actPoints = $genPoints[$actKey]["point"];
      
      //add a point to the placemark
      $point = $kmlFullDoc->createElement("Point");
      $point_altmode = $kmlFullDoc->createElement("altitudeMode");
      $point_altmode_val = $kmlFullDoc->createTextNode("clampToGround");
      $point_altmode->appendChild($point_altmode_val);
      $point->appendChild($point_altmode);
      $p_coords = $kmlFullDoc->createElement("coordinates");
      //$p_coords_text = $kmlFullDoc->createTextNode($point_coords);
      $p_coords_text = $kmlFullDoc->createTextNode($actPoints);
      $p_coords->appendChild($p_coords_text);
      $point->appendChild($p_coords);
      $placemark->appendChild($point);
      
      
      //add time data
      if($doTime){
	 $timespan = $kmlFullDoc->createElement("TimeSpan");
	 $time_begin = $kmlFullDoc->createElement("begin");
	 $time_begin_val = $kmlFullDoc->createTextNode($actItem["geoTime"]["timeBegin"]);
	 $time_begin->appendChild($time_begin_val);
	 $timespan->appendChild($time_begin);
	 $time_end = $kmlFullDoc->createElement("end");
	 $time_end_val = $kmlFullDoc->createTextNode($actItem["geoTime"]["timeEnd"]);
	 $time_end->appendChild($time_end_val);
	 $timespan->appendChild($time_end);
	 $placemark->appendChild($timespan);
      }
      
      //add placemark to whole document
      $kmlDocument->appendChild($placemark);
      
      
      $i++;
   }//end loop through contexts


}
//header('Content-type: application/xml', true);



header('Content-type: application/vnd.google-earth.kml+xml; charset=UTF-8');
header("Content-Disposition: attachment; filename=\"OpenContext\"");


$kmlFullDoc->formatOutput = true;
$kmlString = $kmlFullDoc->saveXML();

echo $kmlString;

//echo var_dump($genPoints);

?>
