<?php

function URIescape($uri){
    return str_replace("&", "&amp;", $uri);
}


$host = OpenContext_OCConfig::get_host_config();

define ('HOST', $host);

$auth = Zend_Auth::getInstance();
if (!$auth->hasIdentity()){
    $displayName = false;
}
else{
    $identity = $auth->getIdentity();
    $displayName = $identity->name;
}


$requestURI = $this->requestURI;
$request_array = explode('?', $requestURI, 2);
//array explode  ( string $delimiter  , string $string  [, int $limit  ] )

if (substr_compare($request_array[0], '/' , -1)) {  // if the uri doesn't end in a slash (minus query parameters), 
    $request_array[0] = $request_array[0] . '/';  // add one
}


if (isset($request_array[1])) { // if there are query parameters,
    $request_array[1] = "?" . $request_array[1];  // prepend a '?' to the set of parameters since we exploded on the '?' to get this string.
    //echo $request_array[1]; // for testing
} else {
    $request_array[1] = null;
}




$requestParams = $this->requestParams;
if(!isset($requestParams["q"])){
    
    $checkParam = $requestParams;
    unset($checkParam["page"]);
    unset($checkParam["recs"]);
    unset($checkParam["sort"]);
    
    if(count($checkParam)>3){
        $searchMessage = "Search this set of data";
    }
    else{
        $searchMessage = "Search all analytic data";
    }
    
    $full_link = $host.$requestURI;
    $full_link  = str_replace("&", "&amp;", $full_link );
    $full_link  = str_replace("&amp;amp;", "&amp;", $full_link );

    $fulltext = '';
    $fulltext .= '<input id="act_uri" type="hidden" value="'.$full_link.'" />';
    $fulltext .= '<span style="text-align:left; margin-left:2%; font-size:.75em;" >';
    $fulltext .= 'Or, type a search term in the box';
    $fulltext .= '</span><br/>';
    $fulltext .= '<div id="b_search_tab">
                    <div id="b_search_row" class="b_search">
                        <div id="b_search_cell_in" >
                                <input name="q" class="bb" type="text" id="q_string" value="Search here..."
                                onfocus="if(this.value==\'Search here...\')this.value=\'\';" onblur="if(this.value==\'\')this.value=\'Search here...\';"
                                />
                        </div>
                        <div id="b_search_cell_button">
                                <button class="bb" type="submit" onclick="textSearch();">Search</button>
                        </div>
                    </div>
                </div>
    ';
    
}
else{
    $fulltext = "";
}



$numFound = $this->numFound;
$facets = $this->facets;
$docs = $this->docs;

if(!isset($requestParams["rel"])){
    $link_filter_message = "<p>Some data in Open Context uses shared terminology systems published by experts in various fields:</p>";
    $link_filter_message .= "<ul>".chr(13);
    
    $eolLink = OpenContext_FacetOutput::generateFacetURL($requestParams, "eol", "root", false);
    $eolTaxaLink = OpenContext_FacetOutput::generateFacetURL($requestParams, "rel", "http://purl.org/NET/biol/ns#term_hasTaxonomy", true);
    $pleiadesLink = OpenContext_FacetOutput::generateFacetURL($requestParams, "rel", "http://gawd.atlantides.org/terms/origin", true);
    
    $link_filter_message .= "<li><a href='$eolLink'>Browse Items</a> with <strong>biological taxa</strong> (from <a href='http://wwww.eol.org'>Encyclopedia of Life</a>)</li>".chr(13);
    $link_filter_message .= "<li><a href='$pleiadesLink'>Browse Items</a> linked to <strong>ancient places</strong> (from <a href='http://pleiades.stoa.org'>Pleaides</a>)</li>".chr(13);
    $link_filter_message .= "<li><a href='../about/concepts#linked-data'><em>More about Linked Data in Open Context</em></a></li>".chr(13);
    $link_filter_message .= "</ul>".chr(13);
}
else{
    $link_filter_message = "<p><a href='../about/concepts#linked-data'><em>More about Linked Data in Open Context</em></a></p>".chr(13);
}

$filter_output = OpenContext_FacetOutput::make_filters_html($requestParams, $host);


$facet_fields = $facets["facet_fields"];
$facet_queries = $facets["facet_queries"];
$extendedFacets = true; //show more available facets 


//do advanced search interface
if(substr_count($requestURI, "advanced=true")>0){
    $advanced = true;
}
else{
    $advanced = false;
}

if($numFound>0){
    $facet_output = OpenContext_FacetOutput::facets_available($extendedFacets, $facet_fields, $facet_queries, $requestParams, $request_array, $host, $advanced);
}
else{
    $facet_output = "(No results to this cquery, please try other search options)";
}



$googleURI = "";
$facetAtomURI = "";
$openSearchURI = "";

//get the link for geojson data
$geoParams = $requestParams;
unset($geoParams["page"]);
unset($geoParams["sort"]);
unset($geoParams["recs"]);
$geoJSONuri = OpenContext_FacetOutput::generateFacetURL($geoParams, false, false, false, false, "facets_geojson");

$satelliteView = 0;
if(isset($geoParams["geotile"])){
    $tileLen = strlen($geoParams["geotile"]);
	 if($tileLen == 0){
		  $geoJSONuri .= "&geotile=";
	 }
    elseif($tileLen >= 14){
        $satelliteView = true;
    }
}
if(isset($requestParams["default_context_path"])){
    if(substr_count($requestParams["default_context_path"], "/") > 1){
        $satelliteView = true;
    }
}


//get the link for comparative / proportional data
$PropotionObj = new ProportionalData;
$PropotionObj->requestParams = $requestParams;
$PropotionLinkURL = $PropotionObj->proportionalVisLink();
$PropotionLinkText = $PropotionObj->linkPropOf;
$nominatorCurrentVal = $PropotionObj->nominatorCurrentVal;
?>


<!DOCTYPE html>
<html lang="en"> 
    <head> 
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <title><?php echo 'Open Context Browse: ('.$numFound.' Items Showing)'; ?></title>
        <link rel="shortcut icon" href="../images/layout/oc-favicon.ico" type="image/x-icon" />
        <link href="<?php echo $host; ?>/css/oc-layout-rev2.css" rel="stylesheet" type="text/css" />
        <link href="<?php echo $host; ?>/css/bootstrap.css" rel="stylesheet" type="text/css" />
        <link href="<?php echo $host; ?>/css/bootstrap-responsive.css" rel="stylesheet" type="text/css" /> 
        <link href="<?php echo $host; ?>/css/opencontext-browse-rev2.css" rel="stylesheet" type="text/css" />
        <link href="<?php echo $host; ?>/css/atomresults.css" rel="stylesheet" type="text/css" />
        
		  <script src="<?php echo $host; ?>/components/js/browse" type="text/javascript"></script>
		  <script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>
		  <script src="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.js"></script>
		  <!-- <script src="http://moonlite.github.io/Leaflet.MultiTileLayer/scripts/lib/Leaflet.MultiTileLayer/src/L.TileLayer.Multi.js"></script> -->
        <script src="http://maps.google.com/maps/api/js?v=3.2&sensor=false"></script>
        <script src="<?php echo $host; ?>/js/GoogleLayers.js" type="text/javascript"></script>
		  
		  <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.css" />
		  <link rel="geotiles" href="<?php echo $geoJSONuri; ?>"/>
		  
		  <script type="text/javascript">
        <!--
            
				
				<?php
        
        echo "var baseURI = '".$host.$requestURI."'; \n";
        echo "var contextBase = '".$host.$request_array[0]."'; \n";
        echo "var paramterBase = '".$request_array[1]."'; \n";
        echo "var numItems = ".count($this->spaceResults)."; \n";
        
        echo chr(13).chr(13);
        
        $activeTaxaValue = OpenContext_FacetOutput::active_taxon_value($requestParams); //for local taxonomies
        echo "var activeTaxaValue = '".$activeTaxaValue."'; \n";
        
        echo chr(13);
        $activeRelationValue = OpenContext_FacetOutput::active_taxon_value($requestParams, false); //for linked data relations
        echo "var activeRelationValue = '".$activeRelationValue."'; \n";
        
        ?>
				
				
     window.onload = function(){
        ConvertRowsToLinks("item_list_tab");
        //AddRowLinks();
      }
      
      function ConvertRowsToLinks(xTableId){
            convertRows(xTableId, "item_row");
            convertRows(xTableId, "item_row_shade");
      }


      function convertRows(xTableId, rowClass){
        var rows = document.getElementById(xTableId).getElementsByClassName(rowClass);
        for(i=0; i < rows.length; i++){
          var link = rows[i].getElementsByTagName("a")
          if(link.length >= 1){
            rows[i].onclick = new Function("document.location.href='" + link[0].href + "'");
            rows[i].onmouseover = new Function("this.style.cursor = 'pointer'");
            rows[i].onmouseout = new Function("this.style.cursor = 'default'");
          }
        }
      }
      
      
      
      function openList(listId){
            var displayControl = listId + "control";
            var displayStatus = document.getElementById(listId).style.display;
            if( displayStatus == "none"){
                document.getElementById(listId).style.display = "";
                document.getElementById(displayControl).innerHTML = "<em>(Hide list below)</em>";
            }
            else{
                document.getElementById(listId).style.display = "none";
                document.getElementById(displayControl).innerHTML = "More...";
            }
      
      }

      -->
        </script>
	  
      
  </head>

  <body >
        
        <!-- 
            Logo,
        -->    
        <?php echo $this->render('header.phtml'); //reader document top ?>
           
        <!-- 
            Navigation tabs, search box
        -->
        <?php echo $this->render('main-navigation.phtml'); //render main navigation area ?>
        
        
       <!--
BEGIN Container for main page content
--> 
    <div id="main_map"> 
        <!--Begin code for showing available facets-->
        <div id="main_content">
            <div id="main_row">
                <div id="left_cont">
                    <div id="filter_options">
                        <h3>Browse and Filter</h3>
                        <p>Click on one of the links below to further limit your view of <em>analytic data</em> in Open Context.</p>
                        <div id="search_sort_block">
                        <?php echo  $fulltext; ?>
                        
                        <!-- facet sorting options -->
                        <?php
                        
                        $SortOptionsObj = New SortOptions;
                        $SortOptionsObj->requestParams = $requestParams;
                        echo $SortOptionsObj->makeFacetSortLinks();
                        
                        ?>
                        </div>
                    </div>
                    <div id="all_facets">
                            <?php echo $facet_output; ?>
                        <br/>
                            <?php
                            
                            $pelagios = New PelagiosV2;
                            $pelagios->initialize($requestParams);
                            $pelagios->getRelated();
                            $pelagios->displayPelagiosData();
                            
                            echo $pelagios->HTMLoutput;
                            
                            ?>
                        <br/>
                        <p>View in <a href="<?php echo URIescape($this->facetURI_KML); ?>">GoogleEarth</a></p>
                        <p>Get in <a href="<?php echo URIescape($this->facetURI_Atom); ?>">Atom</a></p>
                        <br/>
                            <?php echo $link_filter_message; ?>
                    </div>
                </div>
                <div id="right_cont_map">   
                    <div id="selected_filters" >
                        <p>Open Context currently has <strong><?php echo $numFound; ?></strong> items, filtered by the following criteria:</p>
                        <div>
                            <?php echo $filter_output; ?>
                        </div>
                        
                        <div style="text-align:right;">
                        <?php
                        
                        $tableMax = OpenContext_OCConfig::get_maxExport();
                        if($numFound <= $tableMax && $displayName != false){
                            echo "<br/>";
                            echo '<p class="tinyText">'.$displayName.', <a href="'.$host.'/createtab/export-table?setURI='.urlencode($host.$requestURI).'">click here</a> to export these search results to a table.</p>';
                           
                           /*
                            echo '<form action="'.$host.'/createtab/export-table" method="post">
                                    <input type="hidden" value="'.$host.$requestURI.'" name="setURI" />
                                    <input type="submit" value="Export to table" />
                                    </form>';
                           */
                        }
                        elseif($numFound > 0 && $numFound > $tableMax && $displayName != false){
                            echo "<br/>";
                            //echo '<p class="tinyText">'.$displayName.', please filter your selection to '.$tableMax.' items or less in order to export data to a table.</p>';
                        }
                        elseif($numFound > 0 && $numFound <= $tableMax && !$displayName){
                            echo "<br/>";
                            //echo '<p class="tinyText">Please <a href="'.$host.'/auth/" title="User Account Options">login</a> to export this custom selection of data to a table.</p>';
                        }
                        
                        ?>
                        </div>
                        <?php
                        
                    if($numFound >0){
                        if($this->lastUpdate != false){
                        ?>
                        <p class="tinyText" style="text-align:right;">Last Updated: <em><?php echo date("F j, Y, g:i a", strtotime($this->lastUpdate)); ?></em></p>
                        <?php
                        }//end case with an updated time
                        ?>
                        <p class="tinyText" style="text-align:right;">
                            <?php
                            echo '<a href="http://maps.google.com/?q='.urlencode($this->facetURI_KML).'">View a map summary</a>';
                            ?>
                        </p>
                    <?php
                    }//end case of search results above zero ?>
                    </div>
                    <div id="item_list_outer">
                        
                        <div id="paging_outer">
                            <div id="paging_tab">
                                <div id="paging_row">
                                    <div class="paging_cell">
                                        <?php
                                        
                                        if($this->firstPage_XHTML && $this->firstPage_XHTML != $this->currentXHTML){
                                            $linkClass = "pager_active";
                                            $pageLink = "<a href=\"".$this->firstPage_XHTML."\" class=\"btn btn-small btn-primary\" title=\"Go to the first page of results\" >|&larr;</a>";
                                        }
                                        else{
                                            $linkClass = "pager_inactive";
                                            $pageLink = "|&larr;";
                                            $pageLink = "<a href=\"\" class=\"btn btn-small btn-primary disabled\">|&larr;</a>";
                                        }
                                        
                                        ?>
                                        <div class="<?php echo $linkClass; ?>" >
                                            <?php echo $pageLink; ?>
                                        </div>
                                    </div>
                                    <div class="paging_cell">
                                        <?php
                                        
                                        if($this->prevPage_XHTML){
                                            $linkClass = "pager_active";
                                            $pageLink = "<a href=\"".$this->prevPage_XHTML."\" class=\"btn btn-small btn-primary\" title=\"Go to the previous page of results\" >&larr;</a>";
                                        }
                                        else{
                                            $linkClass = "pager_inactive";
                                            $pageLink = "&larr;";
                                            $pageLink = "<a href=\"\" class=\"btn btn-small btn-primary disabled\">&larr;</a>";
                                        }
                                        
                                        ?>
                                        <div class="<?php echo $linkClass; ?>" >
                                            <?php echo $pageLink; ?>
                                        </div>
                                    </div>
                                    <div id="paging_cell_center">
                                        <div id="paging_ct_tab">
                                            <div id="paging_ct_row">
                                                <div id="paging_ct_cell_pageNum">
                                                    <?php
                                                        if(isset($requestParams["page"])){
                                                            $page = $requestParams["page"];
                                                        }
                                                        else{
                                                            $page = 1;
                                                        }
                                                        
                                                        $numRecs = $this->number_recs;
                                                        $lastPage = intval($this->numFound/$numRecs);
                                                        if($lastPage * $numRecs < $numFound){
                                                            $lastPage++;
                                                        }
                                                        echo "Page $page of $lastPage";
                                                        echo ", sorted by ".$this->sorting;
                                                    ?>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Add result sort options -->
                                        <?php echo $SortOptionsObj->makeSortLinks(); ?>
                                    </div>
                                    <div class="paging_cell">
                                        <?php
                                        
                                        if($this->nextPage_XHTML){
                                            $linkClass = "pager_active";
                                            $pageLink = "<a href=\"".$this->nextPage_XHTML."\" class=\"btn btn-small btn-primary\" title=\"Go to the next page of results\" >&rarr;</a>";
                                        }
                                        else{
                                            $linkClass = "pager_inactive";
                                            $pageLink = "&rarr;";
                                            $pageLink = "<a href=\"\" class=\"btn btn-small btn-primary disabled\">&rarr;</a>";
                                        }
                                        
                                        ?>
                                        <div class="<?php echo $linkClass; ?>" >
                                            <?php echo $pageLink; ?>
                                        </div>
                                    </div>
                                    <div class="paging_cell">
                                        <?php
                                        
                                        if($this->lastPage_XHTML && $this->lastPage_XHTML != $this->currentXHTML){
                                            $linkClass = "pager_active";
                                            $pageLink = "<a href=\"".$this->lastPage_XHTML."\" title=\"Go to the last page of results\" class=\"btn btn-small btn-primary\" >&rarr;|</a>";
                                        }
                                        else{
                                            $linkClass = "pager_inactive";
                                            $pageLink = "&rarr;|";
                                            $pageLink = "<a href=\"\" class=\"btn btn-small btn-primary disabled\">&rarr;|</a>";
                                        }
                                        ?>
                                        <div class="<?php echo $linkClass; ?>" >
                                            <?php echo $pageLink; ?>
                                        </div>
                                    </div>
                                </div>
                            </div>
									 
									 <div class="map-legend">
										  <div id="map-legend-row"></div>
									 </div>
									 <div class="map-contr">
										  <div id="map-contr-row"></div>
									 </div>
									 <div id="map"></div>
					 
                        </div>
                        <div id="item_list_tab">
                        <?php
                        //echo $this->result_output;
                        $spaceResults = $this->spaceResults;
                        $il = 0;
                        foreach($spaceResults["items"] as $resItem){
                            
                            if($il & 1){
                                $rowClass = "item_row_shade";
                            }
                            else{
                                $rowClass = "item_row";
                            }
                        
                        
                        ?>
                            <div class="<?php echo $rowClass; ?>" id="item_row_<?php echo $il; ?>">
                                <div class="item_cell_cl_icon">
                                    <a href="<?php echo $resItem["uri"]; ?>">
                                        <img src="<?php echo $resItem["catIcon"]; ?>" alt="<?php echo $resItem["category"]; ?>" />
                                    </a>
                                </div>
                                <div class="item_cell_proj">
                                    <?php echo $resItem["project"]; ?>
                                </div>
                                <div class="item_cell_name_context">
                                    <span class="item_cat_label"><?php echo $resItem["category"]; ?></span>
                                    <span class="item_label">
                                        <a href="<?php echo $resItem["uri"]; ?>"><?php echo $resItem["label"]; ?></a>
                                    </span>
                                    <?php echo $resItem["context"]; ?>
                                </div>
                                <div class="item_cell_detail">
                                    <?php if($resItem["thumbIcon"] !=  $resItem["catIcon"]){ ?>
                                    <a href="<?php echo $resItem["uri"]; ?>">
                                        <img src="<?php echo $resItem["thumbIcon"]; ?>" alt="Thumbnail for <?php echo $resItem["label"]; ?>" />
                                    </a>
                                    
                                    <?php }//end case with a different thumbnails
                                            elseif(is_array($resItem["var_vals"])){
                                    ?> 
                                            <div class="item_sample_data_tab">
                                               
                                                <?php
                                                    $sd = 0;
                                                    $maxSampleRecs = 3;
                                                    $maxSampleChars = 140;
                                                    $LinkedDataObj = new LinkedDataRef;
                                                    foreach($resItem["var_vals"] as $varKey => $val){
                                                        
                                                        if($sd & 1){
                                                            $sampleRowClass = "item_sample_row_shade";
                                                        }
                                                        else{
                                                            $sampleRowClass = "item_sample_row";
                                                        }
                                                        
                                                        $showVal = strip_tags($val);
                                                        if(strlen($showVal)>$maxSampleChars){
                                                            $showVal = substr($showVal, 0, $maxSampleChars)."...";
                                                        }
                                                        
                                                        if((substr($showVal, 0, 7) == "http://") && mb_stristr($varKey, "http://")){
                                                            $LinkedDataObj->lookup_refURI($showVal);
                                                            $showVal = $LinkedDataObj->refLabel;
                                                            $LinkedDataObj->lookup_refURI(str_replace("Rel: ", "", $varKey));
                                                            $varKey = $LinkedDataObj->refLabel;
                                                        }
                                                        ?>
                                                        
                                                        <div class="<?php echo $sampleRowClass; ?>">
                                                            <div class="item_sample_var">
                                                                <span><?php echo $varKey; ?></span>
                                                            </div>
                                                            <div class="item_sample_val">
                                                                <span><?php echo $showVal; ?></span>
                                                            </div>
                                                        </div>
                                                        <?php
                                                        
                                                        $sd++;
                                                        
                                                        if($sd >= $maxSampleRecs){
                                                            break;
                                                        }
                                                    }
                                                ?>
                                            </div>
                                            
                                    <?php           
                                            }//end case where thumb and category icon are the same
                                    ?>
                                </div>
                            </div>
                        <?php
                        $il++;
                        } //end loop
                        
                        //echo print_r($this->docs);
                        ?>
                        </div>
                    </div>
                </div>
            </div>  
   
        <!--
        END of div container for placing main page content
        -->
        </div>
    
    </div>

    <div id="bottomBuffer">

    </div>
    <?php echo $this->render('footer.phtml'); //reader document footer ?>
        
		  
		  <script >
				
				//var startColor = convertToRGB('#6D03B0');    /* The beginning of your gradient */
				//var endColor   = convertToRGB('#FB1B09');    /* The end of your gradient */
				
				var startColor = convertToRGB('#FFC800');
				var endColor   = convertToRGB('#FF0000');
				var proportional = false; //boolean, if we are doing propotional data
				var proportionLinkURL = "<?php echo $PropotionLinkURL; ?>";
				var proportionLinkText = "<?php echo $PropotionLinkText; ?>";
				var nominatorCurrentVal = "<?php echo $nominatorCurrentVal; ?>";
            var satelliteView = <?php echo $satelliteView; ?>;
				
				function colorLegend(){
					 
					 var rDiv = document.getElementById("map-legend-row");
					 
					 if(proportional){
						  //startDiv.innerHTML = Math.round(minCount * 100, 1) + "%";
						  //endDiv.innerHTML = Math.round(minCount * 100, 1) + "%";
						  var startInner ="1%";
						  var endInner = "100%";
						  var curMapView = "Percent '" + nominatorCurrentVal + "' of '" + proportionLinkText + "'";
						  var controlInner = "Raw Count of '" + nominatorCurrentVal + "'";
					 }
					 else{
						  var startInner = minCount;
						  var endInner = maxCount;
					 
						  var curMapView = "Raw Count of '" + nominatorCurrentVal + "'";
						  var controlInner = "Percent '" + nominatorCurrentVal + "' of '" + proportionLinkText + "'";
					 }
					 
					 if(proportionLinkURL != false){
						  var rcDiv = document.getElementById("map-contr-row");
						  var actDiv = document.createElement("div");
						  actDiv.setAttribute("class", "map-contr-cell");
						  actDiv.innerHTML = "Map view: <span class=\"act-map-view\">" + curMapView + "</span>, ";
						  actDiv.innerHTML += "Swtich view to: <a href=\"" + proportionLinkURL + "\">" + controlInner + "</a>";
						  rcDiv.appendChild(actDiv);
					 }
					 
					 
					 var subDivs = 25;
					 for (var i = 1; i <= subDivs; i++) {
						  var actCount = maxCount * ( i / subDivs);
						  var actColor = assignColorByCount(actCount, maxCount);
						  var actDiv = document.createElement("div");
						  
						  actDiv.setAttribute("style", ("background-color: rgb(" + actColor + ");"));
						  if(i == 1){
								actDiv.setAttribute("class", "map-legend-cell-ends");
								actDiv.innerHTML = startInner;
						  }
						  else if(i == subDivs){
								actDiv.setAttribute("class", "map-legend-cell-ends");
								actDiv.innerHTML = endInner;
						  }
						  else{
								actDiv.setAttribute("class", "map-legend-cell");
						  }
						  
						  rDiv.appendChild(actDiv);
					 }
					 
				}
				
				
				function hex (c) {
					 var s = "0123456789abcdef";
					 var i = parseInt (c);
					 if (i == 0 || isNaN (c))
						return "00";
					 i = Math.round (Math.min (Math.max (0, i), 255));
					 return s.charAt ((i - i % 16) / 16) + s.charAt (i % 16);
				  }
				  
				/* Convert an RGB triplet to a hex string */
				function convertToHex (rgb) {
				  return hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);
				}
				  
				/* Remove '#' in color hex string */
				function trim (s) { return (s.charAt(0) == '#') ? s.substring(1, 7) : s }
				  
				/* Convert a hex string to an RGB triplet */
				function convertToRGB (hex) {
					 var color = new Array();
					 color[0] = parseInt ((trim(hex)).substring (0, 2), 16);
					 color[1] = parseInt ((trim(hex)).substring (2, 4), 16);
					 color[2] = parseInt ((trim(hex)).substring (4, 6), 16);
					 return color;
				}
				
				//generate a color for a polygon by its count
				function assignColorByCount(actCount, maxCount){
					 
					 if(maxCount > 0 ){
						  actProp = actCount / maxCount;
					 }
					 else{
					   actProp = 1;
					 } 
					 
					 var newColor = new Array();
					 newColor[0] =  startColor[0] + Math.round((endColor[0] - startColor[0]) * actProp);
					 newColor[1] =  startColor[1] + Math.round((endColor[1] - startColor[1]) * actProp);
					 newColor[2] =  startColor[2] + Math.round((endColor[2] - startColor[2]) * actProp);
					 
					 return newColor;
				}
				
				//get a map icon of the right color
				function createColorMapIconURL(actCount, maxCount){
					 
					 var width = 20;
					 var height = 40;
					 var baseUrl = "http://chart.apis.google.com/chart?cht=mm";
					 var strokeColor = "000000";
					 var cornerColor = "FFFFFF";
					 var primaryColor = convertToHex(assignColorByCount(actCount, maxCount));
					 
					 var iconUrl = baseUrl + "&chs=" + width + "x" + height + 
						  "&chco=" + cornerColor + "," + 
						  primaryColor + "," + 
						  strokeColor + "&ext=.png";
					 
					 return iconUrl;
				}
				
				
				
				
				
				//return the center of a polygon
				function getPolyCenter(coordinates){
					 
					 var pts = coordinates[0];
					 var off = pts[0];
					 var twicearea = 0;
					 var x = 0;
					 var y = 0;
					 var nPts = pts.length;
					 var p1,p2;
					 var f;
					 for (var i = 0, j = nPts - 1; i < nPts; j = i++) {
						  p1 = pts[i];
						  p2 = pts[j];
						  f = (p1[1] - off[1]) * (p2[0] - off[0]) - (p2[1] - off[1]) * (p1[0] - off[0]);
						  twicearea += f;
						  x += (p1[1] + p2[1] - 2 * off[1]) * f;
						  y += (p1[0] + p2[0] - 2 * off[0]) * f;
					 }
					 f = twicearea * 3;
					 
					 return new Array(
						  x / f + off[1],
						  y / f + off[0]
						  );
				}
				
				
				var directionLatLngs = new Array();
				
				function filterBox(geoJSONuri){
					 L.control.layers(tileData).removeLayer;
				}
				
				//function applied to each feature
				function onEachFeature(feature, layer) {
					
					 if(feature.geometry.type == "Polygon"){
						  var newbounds = layer.getBounds();
						  bounds.extend(newbounds.getSouthWest());
						  bounds.extend(newbounds.getNorthEast());
					 }
					 if(feature.geometry.type == "Point"){
						  var newbounds = new Array();
						  newbounds[0] = feature.geometry.coordinates[1]; //annoyance of flipping point coordinates!
						  newbounds[1] = feature.geometry.coordinates[0];
						  bounds.extend(newbounds);
					 }
					 if (feature.properties) {
						  var popupContent = "<div> The context <em>'" + feature.properties.name  + "'</em> has " + feature.properties.count;
						  //popupContent += " items. "
						  //popupContent += "<a href='" + feature.properties.href + "'>Click here</a> to filter by this geographic region</div>";
						  
						  
						  popupContent += " '" + nominatorCurrentVal + "'";
						  popupContent += " items";
						  if(proportional){
								popupContent += " (" + Math.round((feature.properties.count / feature.properties.denominator) * 100, 1);
								popupContent += "% of all " + feature.properties.denominator + " '" + feature.properties.propOf + "' in this context). ";
						  }
						  popupContent += ". ";
						  if(feature.properties.href){
								popupContent += "<a href='" + feature.properties.href + "'>Click here</a> to filter by this region / context."
						  }
						  popupContent += "</div>";
						  
						  layer.bindPopup(popupContent);
						  
					 }
				}
				
				function zoomMap(){
                if(map.getZoom()>14){
                    map.addLayer(gmapSat);
                }
            }
            
            
				var map = L.map('map').setView([0, 0], 2); //map the map
				var bounds = new L.LatLngBounds();
				var maxCount = 0;
				var minCount = 1000000000000;
				var osmTiles = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
            });
            
            var mapboxTiles = L.tileLayer('http://api.tiles.mapbox.com/v3/ekansa.map-tba42j14/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="http://MapBox.com">MapBox.com</a> '
            });
            
            var ESRISatelliteTiles = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
                attribution: '&copy; <a href="http://services.arcgisonline.com/">ESRI.com</a> '
            });
            
            var gmapRoad = new L.Google('ROADMAP');
            var gmapSat = new L.Google('SATELLITE');
            var gmapTer = new L.Google('TERRAIN');
            
            var baseMaps = {
                "Google-Terrain": gmapTer,
                "Google-Satellite": gmapSat,
                "ESRI-Satellite": ESRISatelliteTiles,
                "Google-Roads": gmapRoad,
                "OpenStreetMap": osmTiles,
                "MapBox": mapboxTiles,
            };
           
            if(satelliteView){
                map.addLayer(gmapSat);
            }
            else{
                map.addLayer(gmapTer);
            }
            map._layersMaxZoom = 20;
            L.control.layers(baseMaps).addTo(map);
				
				var tileGroup = new L.FeatureGroup;
				$.getJSON($('link[rel="geotiles"]').attr("href"), function(tileData) {
					 
					 //loop through features to get the maximum count, needed for assigning colors
					 for (var i = 0; i < tileData.features.length; i++) {
						  if(maxCount < tileData.features[i].properties.count){
								maxCount = tileData.features[i].properties.count;
						  }
						  if(minCount > tileData.features[i].properties.count){
								minCount = tileData.features[i].properties.count;
						  }
						  if("denominator" in tileData.features[i].properties){
								if( tileData.features[i].properties.denominator > 0){
									 var tempMin = tileData.features[i].properties.count / tileData.features[i].properties.denominator;
									 if(minCount > tempMin){
										  minCount = tempMin;
									 }
								}
						  }
					 }
					 
					 if("denominator" in tileData.features[0].properties){
						  proportional = true;
						  maxCount = 1;
						  minCount = .001;
					 }
					 if("propOf" in tileData.features[0].properties && !proportionLinkText){
						  proportionLinkText = tileData.features[0].properties.propOf;
					 }
					 
					 
					 
					 colorLegend(); //make the color legend;
					 
					 //loop through features to make points with the correct color icon
					 var iconArray = new Array();
					 for (i = 0; i < tileData.features.length; i++) {
						  if(tileData.features[i].geometry.type == "Polygon"){
								var pointCoords = getPolyCenter(tileData.features[i].geometry.coordinates);
								var latlng = new L.LatLng(pointCoords[0], pointCoords[1]);
						  }
						  if(tileData.features[i].geometry.type == "Point"){
								var latlng = new L.LatLng(tileData.features[i].geometry.coordinates[1], tileData.features[i].geometry.coordinates[0]);
								bounds.extend(latlng);
								
								var actCount = tileData.features[i].properties.count;
								var iconURL = createColorMapIconURL(actCount, maxCount);
								iconArray[actCount] =  L.icon({
														  iconUrl: iconURL,
														  shadowUrl: "http://cdn.leafletjs.com/leaflet-0.5.1/images/marker-shadow.png",
														  iconAnchor:  [10, 38],
														  shadowAnchor: [12, 40]
														  });
								
								var marker = L.marker(latlng, {icon: iconArray[actCount]}).addTo(map);
								var pointContent = "<div> The context <em>'" + tileData.features[i].properties.name  + "'</em> has " + tileData.features[i].properties.count;
								//pointContent += " items. <a href='../maps/test-map?geoJSON=" + tileData.features[i].properties.hrefGeoJSON + "'>Click here</a> to filter by this geographic region</div>";
								pointContent += " items ";
								if(proportional){
									 pointContent += "(" + Math.round((tileData.features[i].properties.count / tileData.features[i].properties.denominator) * 100, 1) + "%)";
								}
								pointContent += ". ";
								if(tileData.features[i].properties.href){
									 pointContent += "<a href='" + tileData.features[i].properties.href + "'>Click here</a> to filter by this geographic region."
								}
								pointContent += "</div>";
								marker.bindPopup(pointContent);
						  }
					 }
					 
					 
					 //now display the geoJSON data, filter out points, since those are handled differently
					 L.geoJson(tileData, {
						  style: function(feature) {
								if(feature.geometry.type == "Polygon"){
									 var actCount = feature.properties.count;
									 if("denominator" in feature.properties){
										  if( feature.properties.denominator > 0){
												actCount = actCount / feature.properties.denominator;
										  }
									 }
									 var newColorRGB = assignColorByCount(actCount, maxCount);
									 var newColorHex =  "#" + convertToHex(newColorRGB);
									 return {color: newColorHex , icon: iconArray[actCount]};
								}
						  },
						  onEachFeature: onEachFeature,
						  filter: function(feature, layer) {
								if(feature.geometry.type == "Point"){
									 return false;
								}
								else{
									 return true;
								}
						  }
					 }
					 
					 ).addTo(map);
                
					 map.fitBounds(bounds);
               
				});
				
            
				
		  </script> 
  
	 </body>
</html>    